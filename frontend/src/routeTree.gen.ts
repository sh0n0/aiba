/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as CompanionIndexImport } from './routes/companion/index'
import { Route as AccountNameIndexImport } from './routes/$accountName/index'
import { Route as CompanionCreateImport } from './routes/companion/create'
import { Route as AccountNameCompanionNameImport } from './routes/$accountName/$companionName'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CompanionIndexRoute = CompanionIndexImport.update({
  id: '/companion/',
  path: '/companion/',
  getParentRoute: () => rootRoute,
} as any)

const AccountNameIndexRoute = AccountNameIndexImport.update({
  id: '/$accountName/',
  path: '/$accountName/',
  getParentRoute: () => rootRoute,
} as any)

const CompanionCreateRoute = CompanionCreateImport.update({
  id: '/companion/create',
  path: '/companion/create',
  getParentRoute: () => rootRoute,
} as any)

const AccountNameCompanionNameRoute = AccountNameCompanionNameImport.update({
  id: '/$accountName/$companionName',
  path: '/$accountName/$companionName',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/$accountName/$companionName': {
      id: '/$accountName/$companionName'
      path: '/$accountName/$companionName'
      fullPath: '/$accountName/$companionName'
      preLoaderRoute: typeof AccountNameCompanionNameImport
      parentRoute: typeof rootRoute
    }
    '/companion/create': {
      id: '/companion/create'
      path: '/companion/create'
      fullPath: '/companion/create'
      preLoaderRoute: typeof CompanionCreateImport
      parentRoute: typeof rootRoute
    }
    '/$accountName/': {
      id: '/$accountName/'
      path: '/$accountName'
      fullPath: '/$accountName'
      preLoaderRoute: typeof AccountNameIndexImport
      parentRoute: typeof rootRoute
    }
    '/companion/': {
      id: '/companion/'
      path: '/companion'
      fullPath: '/companion'
      preLoaderRoute: typeof CompanionIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/$accountName/$companionName': typeof AccountNameCompanionNameRoute
  '/companion/create': typeof CompanionCreateRoute
  '/$accountName': typeof AccountNameIndexRoute
  '/companion': typeof CompanionIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/$accountName/$companionName': typeof AccountNameCompanionNameRoute
  '/companion/create': typeof CompanionCreateRoute
  '/$accountName': typeof AccountNameIndexRoute
  '/companion': typeof CompanionIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/$accountName/$companionName': typeof AccountNameCompanionNameRoute
  '/companion/create': typeof CompanionCreateRoute
  '/$accountName/': typeof AccountNameIndexRoute
  '/companion/': typeof CompanionIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/$accountName/$companionName'
    | '/companion/create'
    | '/$accountName'
    | '/companion'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/$accountName/$companionName'
    | '/companion/create'
    | '/$accountName'
    | '/companion'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/login'
    | '/$accountName/$companionName'
    | '/companion/create'
    | '/$accountName/'
    | '/companion/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  AccountNameCompanionNameRoute: typeof AccountNameCompanionNameRoute
  CompanionCreateRoute: typeof CompanionCreateRoute
  AccountNameIndexRoute: typeof AccountNameIndexRoute
  CompanionIndexRoute: typeof CompanionIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  AccountNameCompanionNameRoute: AccountNameCompanionNameRoute,
  CompanionCreateRoute: CompanionCreateRoute,
  AccountNameIndexRoute: AccountNameIndexRoute,
  CompanionIndexRoute: CompanionIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/login",
        "/$accountName/$companionName",
        "/companion/create",
        "/$accountName/",
        "/companion/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/$accountName/$companionName": {
      "filePath": "$accountName/$companionName.tsx"
    },
    "/companion/create": {
      "filePath": "companion/create.tsx"
    },
    "/$accountName/": {
      "filePath": "$accountName/index.tsx"
    },
    "/companion/": {
      "filePath": "companion/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
